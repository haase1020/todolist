import React from 'react';
import SplitClient from './SplitClient';
/**
 * High-Order Component for SplitClient.
 * The wrapped component receives all the props of the container,
 * along with the passed props from SplitClient (see ISplitClientChildProps).
 *
 * @param splitKey The customer identifier.
 * @param trafficType Traffic type associated with the customer identifier. If no provided here or at the config object, it will be required on the client.track() calls.
 */
function withSplitClient(splitKey, trafficType) {
    return function withSplitClientHoc(WrappedComponent, updateOnSdkUpdate = false, updateOnSdkTimedout = false, updateOnSdkReady = true, updateOnSdkReadyFromCache = true) {
        return (props) => {
            return (React.createElement(SplitClient, { splitKey: splitKey, trafficType: trafficType, updateOnSdkUpdate: updateOnSdkUpdate, updateOnSdkTimedout: updateOnSdkTimedout, updateOnSdkReady: updateOnSdkReady, updateOnSdkReadyFromCache: updateOnSdkReadyFromCache }, (splitProps) => {
                return (React.createElement(WrappedComponent, Object.assign({}, props, splitProps)));
            }));
        };
    };
}
export default withSplitClient;
