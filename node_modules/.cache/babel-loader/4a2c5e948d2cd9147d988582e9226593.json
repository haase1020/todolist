{"ast":null,"code":"var _jsxFileName = \"/home/mandi/mandi/todolist/src/TodoList.js\";\nimport React, { Component } from \"react\";\nimport { SplitTreatments, withSplitFactory } from \"@splitsoftware/splitio-react\";\nimport TodoItems from \"./TodoItems\";\nimport \"./TodoList.css\";\nimport env from \"react-dotenv\";\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: []\n    };\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n  }\n\n  addItem(e) {\n    if (this._inputElement.value !== \"\") {\n      var newItem = {\n        text: this._inputElement.value,\n        key: Date.now()\n      };\n      this.setState(prevState => {\n        return {\n          items: prevState.items.concat(newItem)\n        };\n      });\n      this._inputElement.value = \"\";\n    }\n\n    console.log(this.state.items);\n    e.preventDefault();\n  }\n\n  deleteItem(key) {\n    var filteredItems = this.state.items.filter(function (item) {\n      return item.key !== key;\n    });\n    this.setState({\n      items: filteredItems\n    });\n  } //React render function to render the todo list\n\n\n  render() {\n    return (\n      /*#__PURE__*/\n      //Split Treatments is a React component that performs feature evalutation\n      //Does a call to client.getTreatmentswithConfig(names)\n      //You pass in the name of the feature flag\n      //This returns a treatment and a config\n      React.createElement(SplitTreatments, {\n        names: [\"talia_todolist_delete\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }\n      }, ({\n        treatments\n      }) => {\n        return this.renderContent(treatments[\"talia_todolist_delete\"]);\n      })\n    );\n  }\n\n  renderContent(deleteTreatment) {\n    const allowDelete = deleteTreatment.treatment === \"on\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todoListMain\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.addItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      ref: a => this._inputElement = a,\n      placeholder: \"Enter Task\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, \"Add\"))), /*#__PURE__*/React.createElement(TodoItems, {\n      entries: this.state.items,\n      allowDelete: allowDelete,\n      delete: this.deleteItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }));\n  }\n\n} // The config that I use to configure my split instance\n// This initializes the Split Factory, which is the entry point of the library\n// From Syntax in UI\n\n\nconst sdkConfig = {\n  core: {\n    authorizationKey: \"81v4v3n732gcthq8hjukajje7tfq3t8tbgn6\",\n    key: \"mandi@prenda.co\"\n  },\n  debug: true\n};\nexport default withSplitFactory(sdkConfig)(TodoList);","map":{"version":3,"sources":["/home/mandi/mandi/todolist/src/TodoList.js"],"names":["React","Component","SplitTreatments","withSplitFactory","TodoItems","env","TodoList","constructor","props","state","items","addItem","bind","deleteItem","e","_inputElement","value","newItem","text","key","Date","now","setState","prevState","concat","console","log","preventDefault","filteredItems","filter","item","render","treatments","renderContent","deleteTreatment","allowDelete","treatment","a","sdkConfig","core","authorizationKey","debug"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,eADF,EAEEC,gBAFF,QAGO,8BAHP;AAIA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,gBAAP;AACA,OAAOC,GAAP,MAAgB,cAAhB;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAC/BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAEDD,EAAAA,OAAO,CAACG,CAAD,EAAI;AACT,QAAI,KAAKC,aAAL,CAAmBC,KAAnB,KAA6B,EAAjC,EAAqC;AACnC,UAAIC,OAAO,GAAG;AACZC,QAAAA,IAAI,EAAE,KAAKH,aAAL,CAAmBC,KADb;AAEZG,QAAAA,GAAG,EAAEC,IAAI,CAACC,GAAL;AAFO,OAAd;AAKA,WAAKC,QAAL,CAAeC,SAAD,IAAe;AAC3B,eAAO;AACLb,UAAAA,KAAK,EAAEa,SAAS,CAACb,KAAV,CAAgBc,MAAhB,CAAuBP,OAAvB;AADF,SAAP;AAGD,OAJD;AAMA,WAAKF,aAAL,CAAmBC,KAAnB,GAA2B,EAA3B;AACD;;AAEDS,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWC,KAAvB;AAEAI,IAAAA,CAAC,CAACa,cAAF;AACD;;AAEDd,EAAAA,UAAU,CAACM,GAAD,EAAM;AACd,QAAIS,aAAa,GAAG,KAAKnB,KAAL,CAAWC,KAAX,CAAiBmB,MAAjB,CAAwB,UAAUC,IAAV,EAAgB;AAC1D,aAAOA,IAAI,CAACX,GAAL,KAAaA,GAApB;AACD,KAFmB,CAApB;AAIA,SAAKG,QAAL,CAAc;AACZZ,MAAAA,KAAK,EAAEkB;AADK,KAAd;AAGD,GAxC8B,CA0C/B;;;AACAG,EAAAA,MAAM,GAAG;AACP;AAAA;AACE;AACA;AACA;AACA;AACA,0BAAC,eAAD;AAAiB,QAAA,KAAK,EAAE,CAAC,uBAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAoB;AACnB,eAAO,KAAKC,aAAL,CAAmBD,UAAU,CAAC,uBAAD,CAA7B,CAAP;AACD,OAHH;AALF;AAWD;;AAEDC,EAAAA,aAAa,CAACC,eAAD,EAAkB;AAC7B,UAAMC,WAAW,GAAGD,eAAe,CAACE,SAAhB,KAA8B,IAAlD;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,QAAQ,EAAE,KAAKzB,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,GAAG,EAAG0B,CAAD,IAAQ,KAAKtB,aAAL,GAAqBsB,CADpC;AAEE,MAAA,WAAW,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAKE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,CADF,CADF,eAUE,oBAAC,SAAD;AACE,MAAA,OAAO,EAAE,KAAK5B,KAAL,CAAWC,KADtB;AAEE,MAAA,WAAW,EAAEyB,WAFf;AAGE,MAAA,MAAM,EAAE,KAAKtB,UAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADF;AAkBD;;AA7E8B,C,CAgFjC;AACA;AACA;;;AACA,MAAMyB,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,gBAAgB,EAAE,sCADd;AAEJrB,IAAAA,GAAG,EAAE;AAFD,GADU;AAKhBsB,EAAAA,KAAK,EAAE;AALS,CAAlB;AAQA,eAAetC,gBAAgB,CAACmC,SAAD,CAAhB,CAA4BhC,QAA5B,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  SplitTreatments,\n  withSplitFactory,\n} from \"@splitsoftware/splitio-react\";\nimport TodoItems from \"./TodoItems\";\nimport \"./TodoList.css\";\nimport env from \"react-dotenv\";\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      items: [],\n    };\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n  }\n\n  addItem(e) {\n    if (this._inputElement.value !== \"\") {\n      var newItem = {\n        text: this._inputElement.value,\n        key: Date.now(),\n      };\n\n      this.setState((prevState) => {\n        return {\n          items: prevState.items.concat(newItem),\n        };\n      });\n\n      this._inputElement.value = \"\";\n    }\n\n    console.log(this.state.items);\n\n    e.preventDefault();\n  }\n\n  deleteItem(key) {\n    var filteredItems = this.state.items.filter(function (item) {\n      return item.key !== key;\n    });\n\n    this.setState({\n      items: filteredItems,\n    });\n  }\n\n  //React render function to render the todo list\n  render() {\n    return (\n      //Split Treatments is a React component that performs feature evalutation\n      //Does a call to client.getTreatmentswithConfig(names)\n      //You pass in the name of the feature flag\n      //This returns a treatment and a config\n      <SplitTreatments names={[\"talia_todolist_delete\"]}>\n        {({ treatments }) => {\n          return this.renderContent(treatments[\"talia_todolist_delete\"]);\n        }}\n      </SplitTreatments>\n    );\n  }\n\n  renderContent(deleteTreatment) {\n    const allowDelete = deleteTreatment.treatment === \"on\";\n    return (\n      <div className=\"todoListMain\">\n        <div className=\"header\">\n          <form onSubmit={this.addItem}>\n            <input\n              ref={(a) => (this._inputElement = a)}\n              placeholder=\"Enter Task\"\n            ></input>\n            <button type=\"submit\">Add</button>\n          </form>\n        </div>\n        <TodoItems\n          entries={this.state.items}\n          allowDelete={allowDelete}\n          delete={this.deleteItem}\n        />\n      </div>\n    );\n  }\n}\n\n// The config that I use to configure my split instance\n// This initializes the Split Factory, which is the entry point of the library\n// From Syntax in UI\nconst sdkConfig = {\n  core: {\n    authorizationKey: \"81v4v3n732gcthq8hjukajje7tfq3t8tbgn6\",\n    key: \"mandi@prenda.co\",\n  },\n  debug: true,\n};\n\nexport default withSplitFactory(sdkConfig)(TodoList);\n"]},"metadata":{},"sourceType":"module"}