{"ast":null,"code":"/**\nCopyright 2016 Split Software\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n**/\nimport { groupBy, forOwn } from '../../utils/lang';\nexport function fromImpressionsCollector(collector, settings) {\n  var sendLabels = settings.core.labelsEnabled;\n  var groupedByFeature = groupBy(collector.state(), 'feature');\n  var dto = []; // using forOwn instead of for...in since the last also iterates over prototype enumerables\n\n  forOwn(groupedByFeature, function (value, name) {\n    dto.push({\n      f: name,\n      // Test Name\n      i: value.map(function (entry) {\n        // Key Impressions\n        var keyImpression = {\n          k: entry.keyName,\n          // Key\n          t: entry.treatment,\n          // Treatment\n          m: entry.time,\n          // Timestamp\n          c: entry.changeNumber // ChangeNumber\n\n        };\n        if (sendLabels) keyImpression.r = entry.label; // Rule\n\n        if (entry.bucketingKey) keyImpression.b = entry.bucketingKey; // Bucketing Key\n\n        if (entry.pt) keyImpression.pt = entry.pt;\n        return keyImpression;\n      })\n    });\n  });\n  return dto;\n}\nexport function fromImpressionsCountCollector(collector) {\n  var imprCounts = collector ? collector.size() : 0;\n  var pf = [];\n  if (imprCounts === 0) return pf;\n  var impressionsCount = collector.popAll();\n  var keys = Object.keys(impressionsCount);\n\n  for (var i = 0; i < keys.length; i++) {\n    var splitted = keys[i].split('::');\n    if (splitted.length !== 2) continue;\n    var featureName = splitted[0];\n    var timeFrame = splitted[1];\n    var impressionsInTimeframe = {\n      f: featureName,\n      // Test Name\n      m: Number(timeFrame),\n      // Time Frame\n      rc: impressionsCount[keys[i]] // Count\n\n    };\n    pf.push(impressionsInTimeframe);\n  }\n\n  return pf;\n}","map":{"version":3,"sources":["/home/mandi/mandi/todolist/node_modules/@splitsoftware/splitio-react/es/splitio/services/impressions/dto.js"],"names":["groupBy","forOwn","fromImpressionsCollector","collector","settings","sendLabels","core","labelsEnabled","groupedByFeature","state","dto","value","name","push","f","i","map","entry","keyImpression","k","keyName","t","treatment","m","time","c","changeNumber","r","label","bucketingKey","b","pt","fromImpressionsCountCollector","imprCounts","size","pf","impressionsCount","popAll","keys","Object","length","splitted","split","featureName","timeFrame","impressionsInTimeframe","Number","rc"],"mappings":"AAAA;;;;;;;;;;;;;;;AAeA,SAASA,OAAT,EAAkBC,MAAlB,QAAgC,kBAAhC;AACA,OAAO,SAASC,wBAAT,CAAkCC,SAAlC,EAA6CC,QAA7C,EAAuD;AAC5D,MAAIC,UAAU,GAAGD,QAAQ,CAACE,IAAT,CAAcC,aAA/B;AACA,MAAIC,gBAAgB,GAAGR,OAAO,CAACG,SAAS,CAACM,KAAV,EAAD,EAAoB,SAApB,CAA9B;AACA,MAAIC,GAAG,GAAG,EAAV,CAH4D,CAG9C;;AAEdT,EAAAA,MAAM,CAACO,gBAAD,EAAmB,UAAUG,KAAV,EAAiBC,IAAjB,EAAuB;AAC9CF,IAAAA,GAAG,CAACG,IAAJ,CAAS;AACPC,MAAAA,CAAC,EAAEF,IADI;AAEP;AACAG,MAAAA,CAAC,EAAEJ,KAAK,CAACK,GAAN,CAAU,UAAUC,KAAV,EAAiB;AAC5B;AACA,YAAIC,aAAa,GAAG;AAClBC,UAAAA,CAAC,EAAEF,KAAK,CAACG,OADS;AAElB;AACAC,UAAAA,CAAC,EAAEJ,KAAK,CAACK,SAHS;AAIlB;AACAC,UAAAA,CAAC,EAAEN,KAAK,CAACO,IALS;AAMlB;AACAC,UAAAA,CAAC,EAAER,KAAK,CAACS,YAPS,CAOI;;AAPJ,SAApB;AAUA,YAAIrB,UAAJ,EAAgBa,aAAa,CAACS,CAAd,GAAkBV,KAAK,CAACW,KAAxB,CAZY,CAYmB;;AAE/C,YAAIX,KAAK,CAACY,YAAV,EAAwBX,aAAa,CAACY,CAAd,GAAkBb,KAAK,CAACY,YAAxB,CAdI,CAckC;;AAE9D,YAAIZ,KAAK,CAACc,EAAV,EAAcb,aAAa,CAACa,EAAd,GAAmBd,KAAK,CAACc,EAAzB;AACd,eAAOb,aAAP;AACD,OAlBE;AAHI,KAAT;AAuBD,GAxBK,CAAN;AAyBA,SAAOR,GAAP;AACD;AACD,OAAO,SAASsB,6BAAT,CAAuC7B,SAAvC,EAAkD;AACvD,MAAI8B,UAAU,GAAG9B,SAAS,GAAGA,SAAS,CAAC+B,IAAV,EAAH,GAAsB,CAAhD;AACA,MAAIC,EAAE,GAAG,EAAT;AACA,MAAIF,UAAU,KAAK,CAAnB,EAAsB,OAAOE,EAAP;AACtB,MAAIC,gBAAgB,GAAGjC,SAAS,CAACkC,MAAV,EAAvB;AACA,MAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,gBAAZ,CAAX;;AAEA,OAAK,IAAIrB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuB,IAAI,CAACE,MAAzB,EAAiCzB,CAAC,EAAlC,EAAsC;AACpC,QAAI0B,QAAQ,GAAGH,IAAI,CAACvB,CAAD,CAAJ,CAAQ2B,KAAR,CAAc,IAAd,CAAf;AACA,QAAID,QAAQ,CAACD,MAAT,KAAoB,CAAxB,EAA2B;AAC3B,QAAIG,WAAW,GAAGF,QAAQ,CAAC,CAAD,CAA1B;AACA,QAAIG,SAAS,GAAGH,QAAQ,CAAC,CAAD,CAAxB;AACA,QAAII,sBAAsB,GAAG;AAC3B/B,MAAAA,CAAC,EAAE6B,WADwB;AAE3B;AACApB,MAAAA,CAAC,EAAEuB,MAAM,CAACF,SAAD,CAHkB;AAI3B;AACAG,MAAAA,EAAE,EAAEX,gBAAgB,CAACE,IAAI,CAACvB,CAAD,CAAL,CALO,CAKG;;AALH,KAA7B;AAQAoB,IAAAA,EAAE,CAACtB,IAAH,CAAQgC,sBAAR;AACD;;AAED,SAAOV,EAAP;AACD","sourcesContent":["/**\nCopyright 2016 Split Software\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n**/\nimport { groupBy, forOwn } from '../../utils/lang';\nexport function fromImpressionsCollector(collector, settings) {\n  var sendLabels = settings.core.labelsEnabled;\n  var groupedByFeature = groupBy(collector.state(), 'feature');\n  var dto = []; // using forOwn instead of for...in since the last also iterates over prototype enumerables\n\n  forOwn(groupedByFeature, function (value, name) {\n    dto.push({\n      f: name,\n      // Test Name\n      i: value.map(function (entry) {\n        // Key Impressions\n        var keyImpression = {\n          k: entry.keyName,\n          // Key\n          t: entry.treatment,\n          // Treatment\n          m: entry.time,\n          // Timestamp\n          c: entry.changeNumber // ChangeNumber\n\n        };\n        if (sendLabels) keyImpression.r = entry.label; // Rule\n\n        if (entry.bucketingKey) keyImpression.b = entry.bucketingKey; // Bucketing Key\n\n        if (entry.pt) keyImpression.pt = entry.pt;\n        return keyImpression;\n      })\n    });\n  });\n  return dto;\n}\nexport function fromImpressionsCountCollector(collector) {\n  var imprCounts = collector ? collector.size() : 0;\n  var pf = [];\n  if (imprCounts === 0) return pf;\n  var impressionsCount = collector.popAll();\n  var keys = Object.keys(impressionsCount);\n\n  for (var i = 0; i < keys.length; i++) {\n    var splitted = keys[i].split('::');\n    if (splitted.length !== 2) continue;\n    var featureName = splitted[0];\n    var timeFrame = splitted[1];\n    var impressionsInTimeframe = {\n      f: featureName,\n      // Test Name\n      m: Number(timeFrame),\n      // Time Frame\n      rc: impressionsCount[keys[i]] // Count\n\n    };\n    pf.push(impressionsInTimeframe);\n  }\n\n  return pf;\n}"]},"metadata":{},"sourceType":"module"}