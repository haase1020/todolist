{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\nvar Backoff = /*#__PURE__*/function () {\n  /**\n   * Schedule function calls with exponential backoff\n   *\n   * @param {function} cb\n   * @param {number} baseMillis\n   * @param {number} maxMillis\n   */\n  function Backoff(cb, baseMillis, maxMillis) {\n    _classCallCheck(this, Backoff);\n\n    this.baseMillis = baseMillis || Backoff.DEFAULT_BASE_MILLIS;\n    this.maxMillis = maxMillis || Backoff.DEFAULT_MAX_MILLIS;\n    this.attempts = 0;\n    this.cb = cb;\n  }\n  /**\n   * Schedule a next call to `cb`\n   * @returns scheduled delay in milliseconds\n   */\n\n\n  _createClass(Backoff, [{\n    key: \"scheduleCall\",\n    value: function scheduleCall() {\n      var _this = this;\n\n      var delayInMillis = Math.min(this.baseMillis * Math.pow(2, this.attempts), this.maxMillis);\n      if (this.timeoutID) clearTimeout(this.timeoutID);\n      this.timeoutID = setTimeout(function () {\n        _this.cb();\n      }, delayInMillis);\n      this.attempts++;\n      return delayInMillis;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.attempts = 0;\n\n      if (this.timeoutID) {\n        clearTimeout(this.timeoutID);\n        this.timeoutID = 0;\n      }\n    }\n  }]);\n\n  return Backoff;\n}();\n\nBackoff.DEFAULT_BASE_MILLIS = 1000; // 1 second\n\nBackoff.DEFAULT_MAX_MILLIS = 1800000; // 30 minutes\n\nexport default Backoff;","map":{"version":3,"sources":["/home/mandi/mandi/todolist/node_modules/@splitsoftware/splitio-react/es/splitio/utils/backoff/index.js"],"names":["_classCallCheck","_createClass","Backoff","cb","baseMillis","maxMillis","DEFAULT_BASE_MILLIS","DEFAULT_MAX_MILLIS","attempts","key","value","scheduleCall","_this","delayInMillis","Math","min","pow","timeoutID","clearTimeout","setTimeout","reset"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,2CAA5B;AACA,OAAOC,YAAP,MAAyB,wCAAzB;;AAEA,IAAIC,OAAO,GAAG,aAAa,YAAY;AACrC;;;;;;;AAOA,WAASA,OAAT,CAAiBC,EAAjB,EAAqBC,UAArB,EAAiCC,SAAjC,EAA4C;AAC1CL,IAAAA,eAAe,CAAC,IAAD,EAAOE,OAAP,CAAf;;AAEA,SAAKE,UAAL,GAAkBA,UAAU,IAAIF,OAAO,CAACI,mBAAxC;AACA,SAAKD,SAAL,GAAiBA,SAAS,IAAIH,OAAO,CAACK,kBAAtC;AACA,SAAKC,QAAL,GAAgB,CAAhB;AACA,SAAKL,EAAL,GAAUA,EAAV;AACD;AACD;;;;;;AAMAF,EAAAA,YAAY,CAACC,OAAD,EAAU,CAAC;AACrBO,IAAAA,GAAG,EAAE,cADgB;AAErBC,IAAAA,KAAK,EAAE,SAASC,YAAT,GAAwB;AAC7B,UAAIC,KAAK,GAAG,IAAZ;;AAEA,UAAIC,aAAa,GAAGC,IAAI,CAACC,GAAL,CAAS,KAAKX,UAAL,GAAkBU,IAAI,CAACE,GAAL,CAAS,CAAT,EAAY,KAAKR,QAAjB,CAA3B,EAAuD,KAAKH,SAA5D,CAApB;AACA,UAAI,KAAKY,SAAT,EAAoBC,YAAY,CAAC,KAAKD,SAAN,CAAZ;AACpB,WAAKA,SAAL,GAAiBE,UAAU,CAAC,YAAY;AACtCP,QAAAA,KAAK,CAACT,EAAN;AACD,OAF0B,EAExBU,aAFwB,CAA3B;AAGA,WAAKL,QAAL;AACA,aAAOK,aAAP;AACD;AAZoB,GAAD,EAanB;AACDJ,IAAAA,GAAG,EAAE,OADJ;AAEDC,IAAAA,KAAK,EAAE,SAASU,KAAT,GAAiB;AACtB,WAAKZ,QAAL,GAAgB,CAAhB;;AAEA,UAAI,KAAKS,SAAT,EAAoB;AAClBC,QAAAA,YAAY,CAAC,KAAKD,SAAN,CAAZ;AACA,aAAKA,SAAL,GAAiB,CAAjB;AACD;AACF;AATA,GAbmB,CAAV,CAAZ;;AAyBA,SAAOf,OAAP;AACD,CAhD0B,EAA3B;;AAkDAA,OAAO,CAACI,mBAAR,GAA8B,IAA9B,C,CAAoC;;AAEpCJ,OAAO,CAACK,kBAAR,GAA6B,OAA7B,C,CAAsC;;AAEtC,eAAeL,OAAf","sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\nvar Backoff = /*#__PURE__*/function () {\n  /**\n   * Schedule function calls with exponential backoff\n   *\n   * @param {function} cb\n   * @param {number} baseMillis\n   * @param {number} maxMillis\n   */\n  function Backoff(cb, baseMillis, maxMillis) {\n    _classCallCheck(this, Backoff);\n\n    this.baseMillis = baseMillis || Backoff.DEFAULT_BASE_MILLIS;\n    this.maxMillis = maxMillis || Backoff.DEFAULT_MAX_MILLIS;\n    this.attempts = 0;\n    this.cb = cb;\n  }\n  /**\n   * Schedule a next call to `cb`\n   * @returns scheduled delay in milliseconds\n   */\n\n\n  _createClass(Backoff, [{\n    key: \"scheduleCall\",\n    value: function scheduleCall() {\n      var _this = this;\n\n      var delayInMillis = Math.min(this.baseMillis * Math.pow(2, this.attempts), this.maxMillis);\n      if (this.timeoutID) clearTimeout(this.timeoutID);\n      this.timeoutID = setTimeout(function () {\n        _this.cb();\n      }, delayInMillis);\n      this.attempts++;\n      return delayInMillis;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.attempts = 0;\n\n      if (this.timeoutID) {\n        clearTimeout(this.timeoutID);\n        this.timeoutID = 0;\n      }\n    }\n  }]);\n\n  return Backoff;\n}();\n\nBackoff.DEFAULT_BASE_MILLIS = 1000; // 1 second\n\nBackoff.DEFAULT_MAX_MILLIS = 1800000; // 30 minutes\n\nexport default Backoff;"]},"metadata":{},"sourceType":"module"}