{"ast":null,"code":"/**\nCopyright 2016 Split Software\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n**/\nimport logFactory from '../../utils/logger';\nvar log = logFactory('splitio-engine:matcher');\nimport { findIndex } from '../../utils/lang';\n\nfunction equalToSetMatcherContext(ruleAttr\n/*: array */\n)\n/*: Function */\n{\n  return function equalToSetMatcher(runtimeAttr\n  /*: array */\n  )\n  /*: boolean */\n  {\n    // Length being the same is the first condition.\n    var isEqual = runtimeAttr.length === ruleAttr.length;\n\n    var _loop = function _loop(i) {\n      // if length is the same we check that all elements are present in the other collection.\n      if (findIndex(ruleAttr, function (e) {\n        return e === runtimeAttr[i];\n      }) < 0) isEqual = false;\n    };\n\n    for (var i = 0; i < runtimeAttr.length && isEqual; i++) {\n      _loop(i);\n    }\n\n    log.debug(\"[equalToSetMatcher] is \".concat(runtimeAttr, \" equal to set \").concat(ruleAttr, \"? \").concat(isEqual));\n    return isEqual;\n  };\n}\n\nexport default equalToSetMatcherContext;","map":{"version":3,"sources":["/home/mandi/mandi/todolist/node_modules/@splitsoftware/splitio-react/es/splitio/engine/matchers/eq_set.js"],"names":["logFactory","log","findIndex","equalToSetMatcherContext","ruleAttr","equalToSetMatcher","runtimeAttr","isEqual","length","_loop","i","e","debug","concat"],"mappings":"AAAA;;;;;;;;;;;;;;;AAeA,OAAOA,UAAP,MAAuB,oBAAvB;AACA,IAAIC,GAAG,GAAGD,UAAU,CAAC,wBAAD,CAApB;AACA,SAASE,SAAT,QAA0B,kBAA1B;;AAEA,SAASC,wBAAT,CAAkCC;AAClC;AADA;AAGA;AACA;AACE,SAAO,SAASC,iBAAT,CAA2BC;AAClC;AADO;AAGP;AACA;AACE;AACA,QAAIC,OAAO,GAAGD,WAAW,CAACE,MAAZ,KAAuBJ,QAAQ,CAACI,MAA9C;;AAEA,QAAIC,KAAK,GAAG,SAASA,KAAT,CAAeC,CAAf,EAAkB;AAC5B;AACA,UAAIR,SAAS,CAACE,QAAD,EAAW,UAAUO,CAAV,EAAa;AACnC,eAAOA,CAAC,KAAKL,WAAW,CAACI,CAAD,CAAxB;AACD,OAFY,CAAT,GAEC,CAFL,EAEQH,OAAO,GAAG,KAAV;AACT,KALD;;AAOA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,WAAW,CAACE,MAAhB,IAA0BD,OAA1C,EAAmDG,CAAC,EAApD,EAAwD;AACtDD,MAAAA,KAAK,CAACC,CAAD,CAAL;AACD;;AAEDT,IAAAA,GAAG,CAACW,KAAJ,CAAU,0BAA0BC,MAA1B,CAAiCP,WAAjC,EAA8C,gBAA9C,EAAgEO,MAAhE,CAAuET,QAAvE,EAAiF,IAAjF,EAAuFS,MAAvF,CAA8FN,OAA9F,CAAV;AACA,WAAOA,OAAP;AACD,GArBD;AAsBD;;AAED,eAAeJ,wBAAf","sourcesContent":["/**\nCopyright 2016 Split Software\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n**/\nimport logFactory from '../../utils/logger';\nvar log = logFactory('splitio-engine:matcher');\nimport { findIndex } from '../../utils/lang';\n\nfunction equalToSetMatcherContext(ruleAttr\n/*: array */\n)\n/*: Function */\n{\n  return function equalToSetMatcher(runtimeAttr\n  /*: array */\n  )\n  /*: boolean */\n  {\n    // Length being the same is the first condition.\n    var isEqual = runtimeAttr.length === ruleAttr.length;\n\n    var _loop = function _loop(i) {\n      // if length is the same we check that all elements are present in the other collection.\n      if (findIndex(ruleAttr, function (e) {\n        return e === runtimeAttr[i];\n      }) < 0) isEqual = false;\n    };\n\n    for (var i = 0; i < runtimeAttr.length && isEqual; i++) {\n      _loop(i);\n    }\n\n    log.debug(\"[equalToSetMatcher] is \".concat(runtimeAttr, \" equal to set \").concat(ruleAttr, \"? \").concat(isEqual));\n    return isEqual;\n  };\n}\n\nexport default equalToSetMatcherContext;"]},"metadata":{},"sourceType":"module"}