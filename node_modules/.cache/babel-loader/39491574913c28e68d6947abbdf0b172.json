{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { LinkedList, Node } from './linkedlist';\n\nvar _Map = typeof Map !== 'undefined' ? Map : /*#__PURE__*/function () {\n  // @TODO move this util into its own file\n  function MapPoly() {\n    _classCallCheck(this, MapPoly);\n  }\n\n  _createClass(MapPoly, [{\n    key: \"set\",\n    value: function set(key, value) {\n      this[key] = value;\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      return this[key];\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(key) {\n      delete this[key];\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      return Object.keys(this).length;\n    }\n  }]);\n\n  return MapPoly;\n}();\n\nvar LRUCache = /*#__PURE__*/function () {\n  function LRUCache(maxSize) {\n    _classCallCheck(this, LRUCache);\n\n    this.maxLen = maxSize || 1;\n    this.items = new _Map();\n    this.lru = new LinkedList();\n  }\n\n  _createClass(LRUCache, [{\n    key: \"get\",\n    value: function get(key) {\n      var node = this.items.get(key);\n      if (!node || !(node instanceof Node)) return undefined;\n      this.lru.unshiftNode(node); // Move to front\n\n      return node.value.value;\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      var node = this.items.get(key);\n\n      if (node) {\n        if (!(node instanceof Node)) return false;\n        this.lru.unshiftNode(node); // Move to front\n\n        this.lru.head.value.value = value; // Update value\n      } else {\n        if (this.lru.length === this.maxLen) {\n          // Remove last\n          var last = this.lru.tail;\n          if (!last) return false;\n          this.items.delete(last.value.key);\n          this.lru.removeNode(this.lru.tail); // Remove node\n        }\n\n        this.lru.unshift({\n          key: key,\n          value: value\n        }); // Push front\n\n        this.items.set(key, this.lru.head);\n      }\n\n      return true;\n    }\n  }]);\n\n  return LRUCache;\n}();\n\nexport default LRUCache;","map":{"version":3,"sources":["/home/mandi/mandi/todolist/node_modules/@splitsoftware/splitio-react/es/splitio/utils/lrucache/lrucache.js"],"names":["_classCallCheck","_createClass","LinkedList","Node","_Map","Map","MapPoly","key","value","set","get","_delete","Object","keys","length","LRUCache","maxSize","maxLen","items","lru","node","undefined","unshiftNode","head","last","tail","delete","removeNode","unshift"],"mappings":"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","sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { LinkedList, Node } from './linkedlist';\n\nvar _Map = typeof Map !== 'undefined' ? Map : /*#__PURE__*/function () {\n  // @TODO move this util into its own file\n  function MapPoly() {\n    _classCallCheck(this, MapPoly);\n  }\n\n  _createClass(MapPoly, [{\n    key: \"set\",\n    value: function set(key, value) {\n      this[key] = value;\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      return this[key];\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(key) {\n      delete this[key];\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      return Object.keys(this).length;\n    }\n  }]);\n\n  return MapPoly;\n}();\n\nvar LRUCache = /*#__PURE__*/function () {\n  function LRUCache(maxSize) {\n    _classCallCheck(this, LRUCache);\n\n    this.maxLen = maxSize || 1;\n    this.items = new _Map();\n    this.lru = new LinkedList();\n  }\n\n  _createClass(LRUCache, [{\n    key: \"get\",\n    value: function get(key) {\n      var node = this.items.get(key);\n      if (!node || !(node instanceof Node)) return undefined;\n      this.lru.unshiftNode(node); // Move to front\n\n      return node.value.value;\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      var node = this.items.get(key);\n\n      if (node) {\n        if (!(node instanceof Node)) return false;\n        this.lru.unshiftNode(node); // Move to front\n\n        this.lru.head.value.value = value; // Update value\n      } else {\n        if (this.lru.length === this.maxLen) {\n          // Remove last\n          var last = this.lru.tail;\n          if (!last) return false;\n          this.items.delete(last.value.key);\n          this.lru.removeNode(this.lru.tail); // Remove node\n        }\n\n        this.lru.unshift({\n          key: key,\n          value: value\n        }); // Push front\n\n        this.items.set(key, this.lru.head);\n      }\n\n      return true;\n    }\n  }]);\n\n  return LRUCache;\n}();\n\nexport default LRUCache;"]},"metadata":{},"sourceType":"module"}