{"ast":null,"code":"import { decodeFromBase64 } from '../base64';\n/**\n * Decode a JWT token\n */\n\nexport function decodeJWTtoken(token) {\n  var base64Url = token.split('.')[1];\n  var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/'); // no need to check availability of `encodeURIComponent`, since it is a function highly supported in browsers, node and other platforms.\n\n  var jsonPayload = decodeURIComponent(decodeFromBase64(base64).split('').map(function (c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n  return JSON.parse(jsonPayload);\n}","map":{"version":3,"sources":["/home/mandi/mandi/todolist/node_modules/@splitsoftware/splitio-react/es/splitio/utils/jwt/index.js"],"names":["decodeFromBase64","decodeJWTtoken","token","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","map","c","charCodeAt","toString","slice","join","JSON","parse"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,WAAjC;AACA;;;;AAIA,OAAO,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AACpC,MAAIC,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAhB;AACA,MAAIC,MAAM,GAAGF,SAAS,CAACG,OAAV,CAAkB,IAAlB,EAAwB,GAAxB,EAA6BA,OAA7B,CAAqC,IAArC,EAA2C,GAA3C,CAAb,CAFoC,CAE0B;;AAE9D,MAAIC,WAAW,GAAGC,kBAAkB,CAACR,gBAAgB,CAACK,MAAD,CAAhB,CAAyBD,KAAzB,CAA+B,EAA/B,EAAmCK,GAAnC,CAAuC,UAAUC,CAAV,EAAa;AACvF,WAAO,MAAM,CAAC,OAAOA,CAAC,CAACC,UAAF,CAAa,CAAb,EAAgBC,QAAhB,CAAyB,EAAzB,CAAR,EAAsCC,KAAtC,CAA4C,CAAC,CAA7C,CAAb;AACD,GAFoC,EAElCC,IAFkC,CAE7B,EAF6B,CAAD,CAApC;AAGA,SAAOC,IAAI,CAACC,KAAL,CAAWT,WAAX,CAAP;AACD","sourcesContent":["import { decodeFromBase64 } from '../base64';\n/**\n * Decode a JWT token\n */\n\nexport function decodeJWTtoken(token) {\n  var base64Url = token.split('.')[1];\n  var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/'); // no need to check availability of `encodeURIComponent`, since it is a function highly supported in browsers, node and other platforms.\n\n  var jsonPayload = decodeURIComponent(decodeFromBase64(base64).split('').map(function (c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n  return JSON.parse(jsonPayload);\n}"]},"metadata":{},"sourceType":"module"}