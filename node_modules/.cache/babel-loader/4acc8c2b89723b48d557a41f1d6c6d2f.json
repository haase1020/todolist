{"ast":null,"code":"import React from 'react';\nimport SplitClient from './SplitClient';\n/**\n * High-Order Component for SplitClient.\n * The wrapped component receives all the props of the container,\n * along with the passed props from SplitClient (see ISplitClientChildProps).\n *\n * @param splitKey The customer identifier.\n * @param trafficType Traffic type associated with the customer identifier. If no provided here or at the config object, it will be required on the client.track() calls.\n */\n\nfunction withSplitClient(splitKey, trafficType) {\n  return function withSplitClientHoc(WrappedComponent, updateOnSdkUpdate = false, updateOnSdkTimedout = false, updateOnSdkReady = true, updateOnSdkReadyFromCache = true) {\n    return props => {\n      return React.createElement(SplitClient, {\n        splitKey: splitKey,\n        trafficType: trafficType,\n        updateOnSdkUpdate: updateOnSdkUpdate,\n        updateOnSdkTimedout: updateOnSdkTimedout,\n        updateOnSdkReady: updateOnSdkReady,\n        updateOnSdkReadyFromCache: updateOnSdkReadyFromCache\n      }, splitProps => {\n        return React.createElement(WrappedComponent, Object.assign({}, props, splitProps));\n      });\n    };\n  };\n}\n\nexport default withSplitClient;","map":{"version":3,"sources":["/home/mandi/mandi/todolist/node_modules/@splitsoftware/splitio-react/es/withSplitClient.js"],"names":["React","SplitClient","withSplitClient","splitKey","trafficType","withSplitClientHoc","WrappedComponent","updateOnSdkUpdate","updateOnSdkTimedout","updateOnSdkReady","updateOnSdkReadyFromCache","props","createElement","splitProps","Object","assign"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA;;;;;;;;;AAQA,SAASC,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAC5C,SAAO,SAASC,kBAAT,CAA4BC,gBAA5B,EAA8CC,iBAAiB,GAAG,KAAlE,EAAyEC,mBAAmB,GAAG,KAA/F,EAAsGC,gBAAgB,GAAG,IAAzH,EAA+HC,yBAAyB,GAAG,IAA3J,EAAiK;AACpK,WAAQC,KAAD,IAAW;AACd,aAAQX,KAAK,CAACY,aAAN,CAAoBX,WAApB,EAAiC;AAAEE,QAAAA,QAAQ,EAAEA,QAAZ;AAAsBC,QAAAA,WAAW,EAAEA,WAAnC;AAAgDG,QAAAA,iBAAiB,EAAEA,iBAAnE;AAAsFC,QAAAA,mBAAmB,EAAEA,mBAA3G;AAAgIC,QAAAA,gBAAgB,EAAEA,gBAAlJ;AAAoKC,QAAAA,yBAAyB,EAAEA;AAA/L,OAAjC,EAA8PG,UAAD,IAAgB;AACjR,eAAQb,KAAK,CAACY,aAAN,CAAoBN,gBAApB,EAAsCQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyBE,UAAzB,CAAtC,CAAR;AACH,OAFO,CAAR;AAGH,KAJD;AAKH,GAND;AAOH;;AACD,eAAeX,eAAf","sourcesContent":["import React from 'react';\nimport SplitClient from './SplitClient';\n/**\n * High-Order Component for SplitClient.\n * The wrapped component receives all the props of the container,\n * along with the passed props from SplitClient (see ISplitClientChildProps).\n *\n * @param splitKey The customer identifier.\n * @param trafficType Traffic type associated with the customer identifier. If no provided here or at the config object, it will be required on the client.track() calls.\n */\nfunction withSplitClient(splitKey, trafficType) {\n    return function withSplitClientHoc(WrappedComponent, updateOnSdkUpdate = false, updateOnSdkTimedout = false, updateOnSdkReady = true, updateOnSdkReadyFromCache = true) {\n        return (props) => {\n            return (React.createElement(SplitClient, { splitKey: splitKey, trafficType: trafficType, updateOnSdkUpdate: updateOnSdkUpdate, updateOnSdkTimedout: updateOnSdkTimedout, updateOnSdkReady: updateOnSdkReady, updateOnSdkReadyFromCache: updateOnSdkReadyFromCache }, (splitProps) => {\n                return (React.createElement(WrappedComponent, Object.assign({}, props, splitProps)));\n            }));\n        };\n    };\n}\nexport default withSplitClient;\n"]},"metadata":{},"sourceType":"module"}