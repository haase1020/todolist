{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { truncateTimeFrame } from '../utils/time';\nimport objectAssign from 'object-assign';\n\nvar ImpressionCounter = /*#__PURE__*/function () {\n  function ImpressionCounter() {\n    _classCallCheck(this, ImpressionCounter);\n\n    this.cache = {};\n  }\n  /**\n  * Builds key to be stored in the cache with the featureName and the timeFrame truncated.\n  */\n\n\n  _createClass(ImpressionCounter, [{\n    key: \"_makeKey\",\n    value: function _makeKey(featureName, timeFrame) {\n      return \"\".concat(featureName, \"::\").concat(truncateTimeFrame(timeFrame));\n    }\n    /**\n    * Increments the quantity of impressions with the passed featureName and timeFrame.\n    */\n\n  }, {\n    key: \"inc\",\n    value: function inc(featureName, timeFrame, amount) {\n      var key = this._makeKey(featureName, timeFrame);\n\n      var currentAmount = this.cache[key];\n      this.cache[key] = currentAmount ? currentAmount + amount : amount;\n    }\n    /**\n    * Returns all the elements stored in the cache and resets the cache.\n    */\n\n  }, {\n    key: \"popAll\",\n    value: function popAll() {\n      var res = {};\n      objectAssign(res, this.cache);\n      this.cache = {};\n      return res;\n    }\n    /**\n    * Returns how many keys are stored in cache.\n    */\n\n  }, {\n    key: \"size\",\n    value: function size() {\n      return Object.keys(this.cache).length;\n    }\n  }]);\n\n  return ImpressionCounter;\n}();\n\nexport default ImpressionCounter;","map":{"version":3,"sources":["/home/mandi/mandi/todolist/node_modules/@splitsoftware/splitio-react/es/splitio/impressions/counter.js"],"names":["_classCallCheck","_createClass","truncateTimeFrame","objectAssign","ImpressionCounter","cache","key","value","_makeKey","featureName","timeFrame","concat","inc","amount","currentAmount","popAll","res","size","Object","keys","length"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,2CAA5B;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,SAASC,iBAAT,QAAkC,eAAlC;AACA,OAAOC,YAAP,MAAyB,eAAzB;;AAEA,IAAIC,iBAAiB,GAAG,aAAa,YAAY;AAC/C,WAASA,iBAAT,GAA6B;AAC3BJ,IAAAA,eAAe,CAAC,IAAD,EAAOI,iBAAP,CAAf;;AAEA,SAAKC,KAAL,GAAa,EAAb;AACD;AACD;;;;;AAKAJ,EAAAA,YAAY,CAACG,iBAAD,EAAoB,CAAC;AAC/BE,IAAAA,GAAG,EAAE,UAD0B;AAE/BC,IAAAA,KAAK,EAAE,SAASC,QAAT,CAAkBC,WAAlB,EAA+BC,SAA/B,EAA0C;AAC/C,aAAO,GAAGC,MAAH,CAAUF,WAAV,EAAuB,IAAvB,EAA6BE,MAA7B,CAAoCT,iBAAiB,CAACQ,SAAD,CAArD,CAAP;AACD;AACD;;;;AAL+B,GAAD,EAS7B;AACDJ,IAAAA,GAAG,EAAE,KADJ;AAEDC,IAAAA,KAAK,EAAE,SAASK,GAAT,CAAaH,WAAb,EAA0BC,SAA1B,EAAqCG,MAArC,EAA6C;AAClD,UAAIP,GAAG,GAAG,KAAKE,QAAL,CAAcC,WAAd,EAA2BC,SAA3B,CAAV;;AAEA,UAAII,aAAa,GAAG,KAAKT,KAAL,CAAWC,GAAX,CAApB;AACA,WAAKD,KAAL,CAAWC,GAAX,IAAkBQ,aAAa,GAAGA,aAAa,GAAGD,MAAnB,GAA4BA,MAA3D;AACD;AACD;;;;AARC,GAT6B,EAqB7B;AACDP,IAAAA,GAAG,EAAE,QADJ;AAEDC,IAAAA,KAAK,EAAE,SAASQ,MAAT,GAAkB;AACvB,UAAIC,GAAG,GAAG,EAAV;AACAb,MAAAA,YAAY,CAACa,GAAD,EAAM,KAAKX,KAAX,CAAZ;AACA,WAAKA,KAAL,GAAa,EAAb;AACA,aAAOW,GAAP;AACD;AACD;;;;AARC,GArB6B,EAiC7B;AACDV,IAAAA,GAAG,EAAE,MADJ;AAEDC,IAAAA,KAAK,EAAE,SAASU,IAAT,GAAgB;AACrB,aAAOC,MAAM,CAACC,IAAP,CAAY,KAAKd,KAAjB,EAAwBe,MAA/B;AACD;AAJA,GAjC6B,CAApB,CAAZ;;AAwCA,SAAOhB,iBAAP;AACD,CApDoC,EAArC;;AAsDA,eAAeA,iBAAf","sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { truncateTimeFrame } from '../utils/time';\nimport objectAssign from 'object-assign';\n\nvar ImpressionCounter = /*#__PURE__*/function () {\n  function ImpressionCounter() {\n    _classCallCheck(this, ImpressionCounter);\n\n    this.cache = {};\n  }\n  /**\n  * Builds key to be stored in the cache with the featureName and the timeFrame truncated.\n  */\n\n\n  _createClass(ImpressionCounter, [{\n    key: \"_makeKey\",\n    value: function _makeKey(featureName, timeFrame) {\n      return \"\".concat(featureName, \"::\").concat(truncateTimeFrame(timeFrame));\n    }\n    /**\n    * Increments the quantity of impressions with the passed featureName and timeFrame.\n    */\n\n  }, {\n    key: \"inc\",\n    value: function inc(featureName, timeFrame, amount) {\n      var key = this._makeKey(featureName, timeFrame);\n\n      var currentAmount = this.cache[key];\n      this.cache[key] = currentAmount ? currentAmount + amount : amount;\n    }\n    /**\n    * Returns all the elements stored in the cache and resets the cache.\n    */\n\n  }, {\n    key: \"popAll\",\n    value: function popAll() {\n      var res = {};\n      objectAssign(res, this.cache);\n      this.cache = {};\n      return res;\n    }\n    /**\n    * Returns how many keys are stored in cache.\n    */\n\n  }, {\n    key: \"size\",\n    value: function size() {\n      return Object.keys(this.cache).length;\n    }\n  }]);\n\n  return ImpressionCounter;\n}();\n\nexport default ImpressionCounter;"]},"metadata":{},"sourceType":"module"}