{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n/**\n * Set implementation based on es6-set polyfill (https://github.com/medikoo/es6-set/blob/master/polyfill.js),\n * with the minimal features used by the SDK.\n\nCopyright (C) 2013 Mariusz Nowak (www.medikoo.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n**/\n\nexport var SetPoly = /*#__PURE__*/function () {\n  // unlike ES6 `Set`, it only accepts an array as first argument iterable\n  function SetPoly()\n  /*arrayIterable*/\n  {\n    var _this = this;\n\n    _classCallCheck(this, SetPoly);\n\n    this.__setData__ = [];\n    var arrayIterable = arguments[0];\n    if (Array.isArray(arrayIterable)) arrayIterable.forEach(function (value) {\n      _this.add(value);\n    });\n  }\n\n  _createClass(SetPoly, [{\n    key: \"clear\",\n    value: function clear() {\n      if (!this.__setData__.length) return;\n      this.__setData__.length = 0;\n    }\n  }, {\n    key: \"add\",\n    value: function add(value) {\n      if (this.has(value)) return this;\n\n      this.__setData__.push(value);\n\n      return this;\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(value) {\n      var index = this.__setData__.indexOf(value);\n\n      if (index === -1) return false;\n\n      this.__setData__.splice(index, 1);\n\n      return true;\n    }\n  }, {\n    key: \"has\",\n    value: function has(value) {\n      return this.__setData__.indexOf(value) !== -1;\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(cb\n    /*, thisArg*/\n    ) {\n      var thisArg = arguments[1];\n      if (typeof cb !== 'function') throw new TypeError(cb + ' is not a function');\n\n      for (var i = 0; i < this.__setData__.length; i++) {\n        var value = this.__setData__[i];\n        cb.call(thisArg, value, value, this);\n      }\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this.__setData__.length;\n    }\n  }]);\n\n  return SetPoly;\n}();\nexport function setToArray(set) {\n  if (set instanceof SetPoly) {\n    return set.__setData__.slice();\n  } // if not using SetPoly as set, it means Array.from is supported\n  // eslint-disable-next-line compat/compat\n\n\n  return Array.from(set);\n}\n/**\n * return the Set constructor to use. If `Array.from` built-in or native Set is not available or it doesn't support the required features,\n * a ponyfill with minimal features is returned instead.\n */\n\nfunction getSetConstructor() {\n  // eslint-disable-next-line compat/compat\n  if (Array.from && typeof Set === 'function' && Set.prototype && Set.prototype.values) {\n    return Set;\n  }\n\n  return SetPoly;\n}\n\nexport var _Set = getSetConstructor();","map":{"version":3,"sources":["/home/mandi/mandi/todolist/node_modules/@splitsoftware/splitio-react/es/splitio/utils/lang/Sets.js"],"names":["_classCallCheck","_createClass","SetPoly","_this","__setData__","arrayIterable","arguments","Array","isArray","forEach","value","add","key","clear","length","has","push","_delete","index","indexOf","splice","cb","thisArg","TypeError","i","call","get","setToArray","set","slice","from","getSetConstructor","Set","prototype","values","_Set"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,2CAA5B;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,OAAO,IAAIC,OAAO,GAAG,aAAa,YAAY;AAC5C;AACA,WAASA,OAAT;AACA;AACA;AACE,QAAIC,KAAK,GAAG,IAAZ;;AAEAH,IAAAA,eAAe,CAAC,IAAD,EAAOE,OAAP,CAAf;;AAEA,SAAKE,WAAL,GAAmB,EAAnB;AACA,QAAIC,aAAa,GAAGC,SAAS,CAAC,CAAD,CAA7B;AACA,QAAIC,KAAK,CAACC,OAAN,CAAcH,aAAd,CAAJ,EAAkCA,aAAa,CAACI,OAAd,CAAsB,UAAUC,KAAV,EAAiB;AACvEP,MAAAA,KAAK,CAACQ,GAAN,CAAUD,KAAV;AACD,KAFiC;AAGnC;;AAEDT,EAAAA,YAAY,CAACC,OAAD,EAAU,CAAC;AACrBU,IAAAA,GAAG,EAAE,OADgB;AAErBF,IAAAA,KAAK,EAAE,SAASG,KAAT,GAAiB;AACtB,UAAI,CAAC,KAAKT,WAAL,CAAiBU,MAAtB,EAA8B;AAC9B,WAAKV,WAAL,CAAiBU,MAAjB,GAA0B,CAA1B;AACD;AALoB,GAAD,EAMnB;AACDF,IAAAA,GAAG,EAAE,KADJ;AAEDF,IAAAA,KAAK,EAAE,SAASC,GAAT,CAAaD,KAAb,EAAoB;AACzB,UAAI,KAAKK,GAAL,CAASL,KAAT,CAAJ,EAAqB,OAAO,IAAP;;AAErB,WAAKN,WAAL,CAAiBY,IAAjB,CAAsBN,KAAtB;;AAEA,aAAO,IAAP;AACD;AARA,GANmB,EAenB;AACDE,IAAAA,GAAG,EAAE,QADJ;AAEDF,IAAAA,KAAK,EAAE,SAASO,OAAT,CAAiBP,KAAjB,EAAwB;AAC7B,UAAIQ,KAAK,GAAG,KAAKd,WAAL,CAAiBe,OAAjB,CAAyBT,KAAzB,CAAZ;;AAEA,UAAIQ,KAAK,KAAK,CAAC,CAAf,EAAkB,OAAO,KAAP;;AAElB,WAAKd,WAAL,CAAiBgB,MAAjB,CAAwBF,KAAxB,EAA+B,CAA/B;;AAEA,aAAO,IAAP;AACD;AAVA,GAfmB,EA0BnB;AACDN,IAAAA,GAAG,EAAE,KADJ;AAEDF,IAAAA,KAAK,EAAE,SAASK,GAAT,CAAaL,KAAb,EAAoB;AACzB,aAAO,KAAKN,WAAL,CAAiBe,OAAjB,CAAyBT,KAAzB,MAAoC,CAAC,CAA5C;AACD;AAJA,GA1BmB,EA+BnB;AACDE,IAAAA,GAAG,EAAE,SADJ;AAEDF,IAAAA,KAAK,EAAE,SAASD,OAAT,CAAiBY;AACxB;AADO,MAEL;AACA,UAAIC,OAAO,GAAGhB,SAAS,CAAC,CAAD,CAAvB;AACA,UAAI,OAAOe,EAAP,KAAc,UAAlB,EAA8B,MAAM,IAAIE,SAAJ,CAAcF,EAAE,GAAG,oBAAnB,CAAN;;AAE9B,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKpB,WAAL,CAAiBU,MAArC,EAA6CU,CAAC,EAA9C,EAAkD;AAChD,YAAId,KAAK,GAAG,KAAKN,WAAL,CAAiBoB,CAAjB,CAAZ;AACAH,QAAAA,EAAE,CAACI,IAAH,CAAQH,OAAR,EAAiBZ,KAAjB,EAAwBA,KAAxB,EAA+B,IAA/B;AACD;AACF;AAZA,GA/BmB,EA4CnB;AACDE,IAAAA,GAAG,EAAE,MADJ;AAEDc,IAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,aAAO,KAAKtB,WAAL,CAAiBU,MAAxB;AACD;AAJA,GA5CmB,CAAV,CAAZ;;AAmDA,SAAOZ,OAAP;AACD,CApEiC,EAA3B;AAqEP,OAAO,SAASyB,UAAT,CAAoBC,GAApB,EAAyB;AAC9B,MAAIA,GAAG,YAAY1B,OAAnB,EAA4B;AAC1B,WAAO0B,GAAG,CAACxB,WAAJ,CAAgByB,KAAhB,EAAP;AACD,GAH6B,CAG5B;AACF;;;AAGA,SAAOtB,KAAK,CAACuB,IAAN,CAAWF,GAAX,CAAP;AACD;AACD;;;;;AAKA,SAASG,iBAAT,GAA6B;AAC3B;AACA,MAAIxB,KAAK,CAACuB,IAAN,IAAc,OAAOE,GAAP,KAAe,UAA7B,IAA2CA,GAAG,CAACC,SAA/C,IAA4DD,GAAG,CAACC,SAAJ,CAAcC,MAA9E,EAAsF;AACpF,WAAOF,GAAP;AACD;;AAED,SAAO9B,OAAP;AACD;;AAED,OAAO,IAAIiC,IAAI,GAAGJ,iBAAiB,EAA5B","sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\n/**\n * Set implementation based on es6-set polyfill (https://github.com/medikoo/es6-set/blob/master/polyfill.js),\n * with the minimal features used by the SDK.\n\nCopyright (C) 2013 Mariusz Nowak (www.medikoo.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n**/\nexport var SetPoly = /*#__PURE__*/function () {\n  // unlike ES6 `Set`, it only accepts an array as first argument iterable\n  function SetPoly()\n  /*arrayIterable*/\n  {\n    var _this = this;\n\n    _classCallCheck(this, SetPoly);\n\n    this.__setData__ = [];\n    var arrayIterable = arguments[0];\n    if (Array.isArray(arrayIterable)) arrayIterable.forEach(function (value) {\n      _this.add(value);\n    });\n  }\n\n  _createClass(SetPoly, [{\n    key: \"clear\",\n    value: function clear() {\n      if (!this.__setData__.length) return;\n      this.__setData__.length = 0;\n    }\n  }, {\n    key: \"add\",\n    value: function add(value) {\n      if (this.has(value)) return this;\n\n      this.__setData__.push(value);\n\n      return this;\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(value) {\n      var index = this.__setData__.indexOf(value);\n\n      if (index === -1) return false;\n\n      this.__setData__.splice(index, 1);\n\n      return true;\n    }\n  }, {\n    key: \"has\",\n    value: function has(value) {\n      return this.__setData__.indexOf(value) !== -1;\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(cb\n    /*, thisArg*/\n    ) {\n      var thisArg = arguments[1];\n      if (typeof cb !== 'function') throw new TypeError(cb + ' is not a function');\n\n      for (var i = 0; i < this.__setData__.length; i++) {\n        var value = this.__setData__[i];\n        cb.call(thisArg, value, value, this);\n      }\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this.__setData__.length;\n    }\n  }]);\n\n  return SetPoly;\n}();\nexport function setToArray(set) {\n  if (set instanceof SetPoly) {\n    return set.__setData__.slice();\n  } // if not using SetPoly as set, it means Array.from is supported\n  // eslint-disable-next-line compat/compat\n\n\n  return Array.from(set);\n}\n/**\n * return the Set constructor to use. If `Array.from` built-in or native Set is not available or it doesn't support the required features,\n * a ponyfill with minimal features is returned instead.\n */\n\nfunction getSetConstructor() {\n  // eslint-disable-next-line compat/compat\n  if (Array.from && typeof Set === 'function' && Set.prototype && Set.prototype.values) {\n    return Set;\n  }\n\n  return SetPoly;\n}\n\nexport var _Set = getSetConstructor();"]},"metadata":{},"sourceType":"module"}