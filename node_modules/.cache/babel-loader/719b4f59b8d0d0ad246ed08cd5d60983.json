{"ast":null,"code":"import logFactory from '../logger';\nvar log = logFactory('', {\n  displayAllErrors: true\n});\nexport function validateIfDestroyed(context) {\n  if (!context.get(context.constants.DESTROYED, true)) return true;\n  log.error('Client has already been destroyed - no calls possible.');\n  return false;\n}\nexport function validateIfReady(context, method) {\n  if (context.get(context.constants.READY, true) || context.get(context.constants.READY_FROM_CACHE, true)) return true;\n  log.warn(\"\".concat(method, \": the SDK is not ready, results may be incorrect. Make sure to wait for SDK readiness before using this method.\"));\n  return false;\n}","map":{"version":3,"sources":["/home/mandi/mandi/todolist/node_modules/@splitsoftware/splitio-react/es/splitio/utils/inputValidation/isOperational.js"],"names":["logFactory","log","displayAllErrors","validateIfDestroyed","context","get","constants","DESTROYED","error","validateIfReady","method","READY","READY_FROM_CACHE","warn","concat"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,WAAvB;AACA,IAAIC,GAAG,GAAGD,UAAU,CAAC,EAAD,EAAK;AACvBE,EAAAA,gBAAgB,EAAE;AADK,CAAL,CAApB;AAGA,OAAO,SAASC,mBAAT,CAA6BC,OAA7B,EAAsC;AAC3C,MAAI,CAACA,OAAO,CAACC,GAAR,CAAYD,OAAO,CAACE,SAAR,CAAkBC,SAA9B,EAAyC,IAAzC,CAAL,EAAqD,OAAO,IAAP;AACrDN,EAAAA,GAAG,CAACO,KAAJ,CAAU,wDAAV;AACA,SAAO,KAAP;AACD;AACD,OAAO,SAASC,eAAT,CAAyBL,OAAzB,EAAkCM,MAAlC,EAA0C;AAC/C,MAAIN,OAAO,CAACC,GAAR,CAAYD,OAAO,CAACE,SAAR,CAAkBK,KAA9B,EAAqC,IAArC,KAA8CP,OAAO,CAACC,GAAR,CAAYD,OAAO,CAACE,SAAR,CAAkBM,gBAA9B,EAAgD,IAAhD,CAAlD,EAAyG,OAAO,IAAP;AACzGX,EAAAA,GAAG,CAACY,IAAJ,CAAS,GAAGC,MAAH,CAAUJ,MAAV,EAAkB,iHAAlB,CAAT;AACA,SAAO,KAAP;AACD","sourcesContent":["import logFactory from '../logger';\nvar log = logFactory('', {\n  displayAllErrors: true\n});\nexport function validateIfDestroyed(context) {\n  if (!context.get(context.constants.DESTROYED, true)) return true;\n  log.error('Client has already been destroyed - no calls possible.');\n  return false;\n}\nexport function validateIfReady(context, method) {\n  if (context.get(context.constants.READY, true) || context.get(context.constants.READY_FROM_CACHE, true)) return true;\n  log.warn(\"\".concat(method, \": the SDK is not ready, results may be incorrect. Make sure to wait for SDK readiness before using this method.\"));\n  return false;\n}"]},"metadata":{},"sourceType":"module"}