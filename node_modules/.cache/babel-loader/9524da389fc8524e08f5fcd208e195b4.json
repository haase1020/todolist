{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\n/**\n * yallist implementation based on isaacs/yallist (https://github.com/isaacs/yallist/yallist.js),\n * with the minimal features used by the SDK.\n\nCopyright (c) Isaac Z. Schlueter and Contributors\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n**/\n\nexport var Node = function Node(value, prev, next, list) {\n  _classCallCheck(this, Node);\n\n  this.list = list;\n  this.value = value;\n\n  if (prev) {\n    prev.next = this;\n    this.prev = prev;\n  } else {\n    this.prev = null;\n  }\n\n  if (next) {\n    next.prev = this;\n    this.next = next;\n  } else {\n    this.next = null;\n  }\n};\nexport var LinkedList = /*#__PURE__*/function () {\n  function LinkedList() {\n    _classCallCheck(this, LinkedList);\n\n    this.tail = null;\n    this.head = null;\n    this.length = 0;\n  }\n\n  _createClass(LinkedList, [{\n    key: \"removeNode\",\n    value: function removeNode(node) {\n      if (!node || !(node instanceof Node)) return;\n\n      if (node.list !== this) {\n        throw new Error('removing node which does not belong to this list');\n      }\n\n      var next = node.next;\n      var prev = node.prev;\n\n      if (next) {\n        next.prev = prev;\n      }\n\n      if (prev) {\n        prev.next = next;\n      }\n\n      if (node === this.head) {\n        this.head = next;\n      }\n\n      if (node === this.tail) {\n        this.tail = prev;\n      }\n\n      node.list.length--;\n      node.next = null;\n      node.prev = null;\n      node.list = null;\n      return next;\n    }\n  }, {\n    key: \"unshiftNode\",\n    value: function unshiftNode(node) {\n      if (!node || !(node instanceof Node)) return;\n\n      if (node === this.head) {\n        return;\n      }\n\n      if (node.list) {\n        node.list.removeNode(node);\n      }\n\n      var head = this.head;\n      node.list = this;\n      node.next = head;\n\n      if (head) {\n        head.prev = node;\n      }\n\n      this.head = node;\n\n      if (!this.tail) {\n        this.tail = node;\n      }\n\n      this.length++;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift() {\n      for (var i = 0, l = arguments.length; i < l; i++) {\n        this.head = new Node(arguments[i], null, this.head, this);\n\n        if (!this.tail) {\n          this.tail = this.head;\n        }\n\n        this.length++;\n      }\n\n      return this.length;\n    }\n  }]);\n\n  return LinkedList;\n}();","map":{"version":3,"sources":["/home/mandi/mandi/todolist/node_modules/@splitsoftware/splitio-react/es/splitio/utils/lrucache/linkedlist.js"],"names":["_createClass","_classCallCheck","Node","value","prev","next","list","LinkedList","tail","head","length","key","removeNode","node","Error","unshiftNode","unshift","i","l","arguments"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,wCAAzB;AACA,OAAOC,eAAP,MAA4B,2CAA5B;AAEA;;;;;;;;;;;;;;;;;;;AAkBA,OAAO,IAAIC,IAAI,GAAG,SAASA,IAAT,CAAcC,KAAd,EAAqBC,IAArB,EAA2BC,IAA3B,EAAiCC,IAAjC,EAAuC;AACvDL,EAAAA,eAAe,CAAC,IAAD,EAAOC,IAAP,CAAf;;AAEA,OAAKI,IAAL,GAAYA,IAAZ;AACA,OAAKH,KAAL,GAAaA,KAAb;;AAEA,MAAIC,IAAJ,EAAU;AACRA,IAAAA,IAAI,CAACC,IAAL,GAAY,IAAZ;AACA,SAAKD,IAAL,GAAYA,IAAZ;AACD,GAHD,MAGO;AACL,SAAKA,IAAL,GAAY,IAAZ;AACD;;AAED,MAAIC,IAAJ,EAAU;AACRA,IAAAA,IAAI,CAACD,IAAL,GAAY,IAAZ;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACD,GAHD,MAGO;AACL,SAAKA,IAAL,GAAY,IAAZ;AACD;AACF,CAnBM;AAoBP,OAAO,IAAIE,UAAU,GAAG,aAAa,YAAY;AAC/C,WAASA,UAAT,GAAsB;AACpBN,IAAAA,eAAe,CAAC,IAAD,EAAOM,UAAP,CAAf;;AAEA,SAAKC,IAAL,GAAY,IAAZ;AACA,SAAKC,IAAL,GAAY,IAAZ;AACA,SAAKC,MAAL,GAAc,CAAd;AACD;;AAEDV,EAAAA,YAAY,CAACO,UAAD,EAAa,CAAC;AACxBI,IAAAA,GAAG,EAAE,YADmB;AAExBR,IAAAA,KAAK,EAAE,SAASS,UAAT,CAAoBC,IAApB,EAA0B;AAC/B,UAAI,CAACA,IAAD,IAAS,EAAEA,IAAI,YAAYX,IAAlB,CAAb,EAAsC;;AAEtC,UAAIW,IAAI,CAACP,IAAL,KAAc,IAAlB,EAAwB;AACtB,cAAM,IAAIQ,KAAJ,CAAU,kDAAV,CAAN;AACD;;AAED,UAAIT,IAAI,GAAGQ,IAAI,CAACR,IAAhB;AACA,UAAID,IAAI,GAAGS,IAAI,CAACT,IAAhB;;AAEA,UAAIC,IAAJ,EAAU;AACRA,QAAAA,IAAI,CAACD,IAAL,GAAYA,IAAZ;AACD;;AAED,UAAIA,IAAJ,EAAU;AACRA,QAAAA,IAAI,CAACC,IAAL,GAAYA,IAAZ;AACD;;AAED,UAAIQ,IAAI,KAAK,KAAKJ,IAAlB,EAAwB;AACtB,aAAKA,IAAL,GAAYJ,IAAZ;AACD;;AAED,UAAIQ,IAAI,KAAK,KAAKL,IAAlB,EAAwB;AACtB,aAAKA,IAAL,GAAYJ,IAAZ;AACD;;AAEDS,MAAAA,IAAI,CAACP,IAAL,CAAUI,MAAV;AACAG,MAAAA,IAAI,CAACR,IAAL,GAAY,IAAZ;AACAQ,MAAAA,IAAI,CAACT,IAAL,GAAY,IAAZ;AACAS,MAAAA,IAAI,CAACP,IAAL,GAAY,IAAZ;AACA,aAAOD,IAAP;AACD;AAjCuB,GAAD,EAkCtB;AACDM,IAAAA,GAAG,EAAE,aADJ;AAEDR,IAAAA,KAAK,EAAE,SAASY,WAAT,CAAqBF,IAArB,EAA2B;AAChC,UAAI,CAACA,IAAD,IAAS,EAAEA,IAAI,YAAYX,IAAlB,CAAb,EAAsC;;AAEtC,UAAIW,IAAI,KAAK,KAAKJ,IAAlB,EAAwB;AACtB;AACD;;AAED,UAAII,IAAI,CAACP,IAAT,EAAe;AACbO,QAAAA,IAAI,CAACP,IAAL,CAAUM,UAAV,CAAqBC,IAArB;AACD;;AAED,UAAIJ,IAAI,GAAG,KAAKA,IAAhB;AACAI,MAAAA,IAAI,CAACP,IAAL,GAAY,IAAZ;AACAO,MAAAA,IAAI,CAACR,IAAL,GAAYI,IAAZ;;AAEA,UAAIA,IAAJ,EAAU;AACRA,QAAAA,IAAI,CAACL,IAAL,GAAYS,IAAZ;AACD;;AAED,WAAKJ,IAAL,GAAYI,IAAZ;;AAEA,UAAI,CAAC,KAAKL,IAAV,EAAgB;AACd,aAAKA,IAAL,GAAYK,IAAZ;AACD;;AAED,WAAKH,MAAL;AACD;AA5BA,GAlCsB,EA+DtB;AACDC,IAAAA,GAAG,EAAE,SADJ;AAEDR,IAAAA,KAAK,EAAE,SAASa,OAAT,GAAmB;AACxB,WAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGC,SAAS,CAACT,MAA9B,EAAsCO,CAAC,GAAGC,CAA1C,EAA6CD,CAAC,EAA9C,EAAkD;AAChD,aAAKR,IAAL,GAAY,IAAIP,IAAJ,CAASiB,SAAS,CAACF,CAAD,CAAlB,EAAuB,IAAvB,EAA6B,KAAKR,IAAlC,EAAwC,IAAxC,CAAZ;;AAEA,YAAI,CAAC,KAAKD,IAAV,EAAgB;AACd,eAAKA,IAAL,GAAY,KAAKC,IAAjB;AACD;;AAED,aAAKC,MAAL;AACD;;AAED,aAAO,KAAKA,MAAZ;AACD;AAdA,GA/DsB,CAAb,CAAZ;;AAgFA,SAAOH,UAAP;AACD,CA1FoC,EAA9B","sourcesContent":["import _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * yallist implementation based on isaacs/yallist (https://github.com/isaacs/yallist/yallist.js),\n * with the minimal features used by the SDK.\n\nCopyright (c) Isaac Z. Schlueter and Contributors\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n**/\nexport var Node = function Node(value, prev, next, list) {\n  _classCallCheck(this, Node);\n\n  this.list = list;\n  this.value = value;\n\n  if (prev) {\n    prev.next = this;\n    this.prev = prev;\n  } else {\n    this.prev = null;\n  }\n\n  if (next) {\n    next.prev = this;\n    this.next = next;\n  } else {\n    this.next = null;\n  }\n};\nexport var LinkedList = /*#__PURE__*/function () {\n  function LinkedList() {\n    _classCallCheck(this, LinkedList);\n\n    this.tail = null;\n    this.head = null;\n    this.length = 0;\n  }\n\n  _createClass(LinkedList, [{\n    key: \"removeNode\",\n    value: function removeNode(node) {\n      if (!node || !(node instanceof Node)) return;\n\n      if (node.list !== this) {\n        throw new Error('removing node which does not belong to this list');\n      }\n\n      var next = node.next;\n      var prev = node.prev;\n\n      if (next) {\n        next.prev = prev;\n      }\n\n      if (prev) {\n        prev.next = next;\n      }\n\n      if (node === this.head) {\n        this.head = next;\n      }\n\n      if (node === this.tail) {\n        this.tail = prev;\n      }\n\n      node.list.length--;\n      node.next = null;\n      node.prev = null;\n      node.list = null;\n      return next;\n    }\n  }, {\n    key: \"unshiftNode\",\n    value: function unshiftNode(node) {\n      if (!node || !(node instanceof Node)) return;\n\n      if (node === this.head) {\n        return;\n      }\n\n      if (node.list) {\n        node.list.removeNode(node);\n      }\n\n      var head = this.head;\n      node.list = this;\n      node.next = head;\n\n      if (head) {\n        head.prev = node;\n      }\n\n      this.head = node;\n\n      if (!this.tail) {\n        this.tail = node;\n      }\n\n      this.length++;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift() {\n      for (var i = 0, l = arguments.length; i < l; i++) {\n        this.head = new Node(arguments[i], null, this.head, this);\n\n        if (!this.tail) {\n          this.tail = this.head;\n        }\n\n        this.length++;\n      }\n\n      return this.length;\n    }\n  }]);\n\n  return LinkedList;\n}();"]},"metadata":{},"sourceType":"module"}