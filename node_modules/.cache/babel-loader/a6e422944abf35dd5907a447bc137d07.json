{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport { startsWith } from '../utils/lang';\nimport KeyBuilder from './Keys';\nimport { matching } from '../utils/key/factory';\n\nvar KeyBuilderForLocalStorage = /*#__PURE__*/function (_KeyBuilder) {\n  _inherits(KeyBuilderForLocalStorage, _KeyBuilder);\n\n  var _super = _createSuper(KeyBuilderForLocalStorage);\n\n  function KeyBuilderForLocalStorage(settings) {\n    var _this;\n\n    _classCallCheck(this, KeyBuilderForLocalStorage);\n\n    _this = _super.call(this, settings);\n    _this.regexSplitCacheKey = new RegExp(\"^\".concat(_this.settings.storage.prefix, \"\\\\.(splits?|trafficType)\\\\.\"));\n    return _this;\n  }\n\n  _createClass(KeyBuilderForLocalStorage, [{\n    key: \"buildSegmentNameKey\",\n    value: function buildSegmentNameKey(segmentName) {\n      return \"\".concat(matching(this.settings.core.key), \".\").concat(this.settings.storage.prefix, \".segment.\").concat(segmentName);\n    }\n  }, {\n    key: \"extractSegmentName\",\n    value: function extractSegmentName(builtSegmentKeyName) {\n      var prefix = \"\".concat(matching(this.settings.core.key), \".\").concat(this.settings.storage.prefix, \".segment.\");\n      if (startsWith(builtSegmentKeyName, prefix)) return builtSegmentKeyName.substr(prefix.length);\n    }\n  }, {\n    key: \"buildSplitsWithSegmentCountKey\",\n    value: function buildSplitsWithSegmentCountKey() {\n      return \"\".concat(this.settings.storage.prefix, \".splits.usingSegments\");\n    }\n  }, {\n    key: \"buildLastUpdatedKey\",\n    value: function buildLastUpdatedKey() {\n      return \"\".concat(this.settings.storage.prefix, \".splits.lastUpdated\");\n    }\n  }, {\n    key: \"isSplitCacheKey\",\n    value: function isSplitCacheKey(key) {\n      return this.regexSplitCacheKey.test(key);\n    }\n  }, {\n    key: \"buildSplitsFilterQueryKey\",\n    value: function buildSplitsFilterQueryKey() {\n      return \"\".concat(this.settings.storage.prefix, \".splits.filterQuery\");\n    }\n  }]);\n\n  return KeyBuilderForLocalStorage;\n}(KeyBuilder);\n\nexport default KeyBuilderForLocalStorage;","map":{"version":3,"sources":["/home/mandi/mandi/todolist/node_modules/@splitsoftware/splitio-react/es/splitio/storage/KeysLocalStorage.js"],"names":["_classCallCheck","_createClass","_inherits","_possibleConstructorReturn","_getPrototypeOf","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Date","prototype","toString","call","e","startsWith","KeyBuilder","matching","KeyBuilderForLocalStorage","_KeyBuilder","_super","settings","_this","regexSplitCacheKey","RegExp","concat","storage","prefix","key","value","buildSegmentNameKey","segmentName","core","extractSegmentName","builtSegmentKeyName","substr","length","buildSplitsWithSegmentCountKey","buildLastUpdatedKey","isSplitCacheKey","test","buildSplitsFilterQueryKey"],"mappings":"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","sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { startsWith } from '../utils/lang';\nimport KeyBuilder from './Keys';\nimport { matching } from '../utils/key/factory';\n\nvar KeyBuilderForLocalStorage = /*#__PURE__*/function (_KeyBuilder) {\n  _inherits(KeyBuilderForLocalStorage, _KeyBuilder);\n\n  var _super = _createSuper(KeyBuilderForLocalStorage);\n\n  function KeyBuilderForLocalStorage(settings) {\n    var _this;\n\n    _classCallCheck(this, KeyBuilderForLocalStorage);\n\n    _this = _super.call(this, settings);\n    _this.regexSplitCacheKey = new RegExp(\"^\".concat(_this.settings.storage.prefix, \"\\\\.(splits?|trafficType)\\\\.\"));\n    return _this;\n  }\n\n  _createClass(KeyBuilderForLocalStorage, [{\n    key: \"buildSegmentNameKey\",\n    value: function buildSegmentNameKey(segmentName) {\n      return \"\".concat(matching(this.settings.core.key), \".\").concat(this.settings.storage.prefix, \".segment.\").concat(segmentName);\n    }\n  }, {\n    key: \"extractSegmentName\",\n    value: function extractSegmentName(builtSegmentKeyName) {\n      var prefix = \"\".concat(matching(this.settings.core.key), \".\").concat(this.settings.storage.prefix, \".segment.\");\n      if (startsWith(builtSegmentKeyName, prefix)) return builtSegmentKeyName.substr(prefix.length);\n    }\n  }, {\n    key: \"buildSplitsWithSegmentCountKey\",\n    value: function buildSplitsWithSegmentCountKey() {\n      return \"\".concat(this.settings.storage.prefix, \".splits.usingSegments\");\n    }\n  }, {\n    key: \"buildLastUpdatedKey\",\n    value: function buildLastUpdatedKey() {\n      return \"\".concat(this.settings.storage.prefix, \".splits.lastUpdated\");\n    }\n  }, {\n    key: \"isSplitCacheKey\",\n    value: function isSplitCacheKey(key) {\n      return this.regexSplitCacheKey.test(key);\n    }\n  }, {\n    key: \"buildSplitsFilterQueryKey\",\n    value: function buildSplitsFilterQueryKey() {\n      return \"\".concat(this.settings.storage.prefix, \".splits.filterQuery\");\n    }\n  }]);\n\n  return KeyBuilderForLocalStorage;\n}(KeyBuilder);\n\nexport default KeyBuilderForLocalStorage;"]},"metadata":{},"sourceType":"module"}