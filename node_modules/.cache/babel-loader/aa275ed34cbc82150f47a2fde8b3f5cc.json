{"ast":null,"code":"/**\nCopyright 2016 Split Software\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n**/\nimport timeout from '../../utils/promise/timeout';\nimport tracker from '../../utils/timeTracker';\nimport { SplitError } from '../../utils/lang/Errors';\nimport mySegmentsService from '../../services/mySegments';\nimport mySegmentsRequest from '../../services/mySegments/get';\n\nvar mySegmentsFetcher = function mySegmentsFetcher(settings) {\n  var startingUp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var metricCollectors = arguments.length > 2 ? arguments[2] : undefined;\n  var mySegmentsPromise = mySegmentsService(mySegmentsRequest(settings));\n  mySegmentsPromise = tracker.start(tracker.TaskNames.MY_SEGMENTS_FETCH, startingUp ? metricCollectors : false, mySegmentsPromise); // Decorate with the timeout functionality if required\n\n  if (startingUp) {\n    mySegmentsPromise = timeout(settings.startup.requestTimeoutBeforeReady, mySegmentsPromise);\n  } // Extract segment names\n\n\n  return mySegmentsPromise // JSON parsing errors are handled as SplitErrors, to distinguish from user callback errors\n  .then(function (resp) {\n    return resp.json().catch(function (error) {\n      throw new SplitError(error.message);\n    });\n  }).then(function (json) {\n    return json.mySegments.map(function (segment) {\n      return segment.name;\n    });\n  });\n};\n\nexport default mySegmentsFetcher;","map":{"version":3,"sources":["/home/mandi/mandi/todolist/node_modules/@splitsoftware/splitio-react/es/splitio/producer/fetcher/MySegments.js"],"names":["timeout","tracker","SplitError","mySegmentsService","mySegmentsRequest","mySegmentsFetcher","settings","startingUp","arguments","length","undefined","metricCollectors","mySegmentsPromise","start","TaskNames","MY_SEGMENTS_FETCH","startup","requestTimeoutBeforeReady","then","resp","json","catch","error","message","mySegments","map","segment","name"],"mappings":"AAAA;;;;;;;;;;;;;;;AAeA,OAAOA,OAAP,MAAoB,6BAApB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;;AAEA,IAAIC,iBAAiB,GAAG,SAASA,iBAAT,CAA2BC,QAA3B,EAAqC;AAC3D,MAAIC,UAAU,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAArF;AACA,MAAIG,gBAAgB,GAAGH,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBD,SAAS,CAAC,CAAD,CAAhC,GAAsCE,SAA7D;AACA,MAAIE,iBAAiB,GAAGT,iBAAiB,CAACC,iBAAiB,CAACE,QAAD,CAAlB,CAAzC;AACAM,EAAAA,iBAAiB,GAAGX,OAAO,CAACY,KAAR,CAAcZ,OAAO,CAACa,SAAR,CAAkBC,iBAAhC,EAAmDR,UAAU,GAAGI,gBAAH,GAAsB,KAAnF,EAA0FC,iBAA1F,CAApB,CAJ2D,CAIuE;;AAElI,MAAIL,UAAJ,EAAgB;AACdK,IAAAA,iBAAiB,GAAGZ,OAAO,CAACM,QAAQ,CAACU,OAAT,CAAiBC,yBAAlB,EAA6CL,iBAA7C,CAA3B;AACD,GAR0D,CAQzD;;;AAGF,SAAOA,iBAAiB,CAAC;AAAD,GACvBM,IADM,CACD,UAAUC,IAAV,EAAgB;AACpB,WAAOA,IAAI,CAACC,IAAL,GAAYC,KAAZ,CAAkB,UAAUC,KAAV,EAAiB;AACxC,YAAM,IAAIpB,UAAJ,CAAeoB,KAAK,CAACC,OAArB,CAAN;AACD,KAFM,CAAP;AAGD,GALM,EAKJL,IALI,CAKC,UAAUE,IAAV,EAAgB;AACtB,WAAOA,IAAI,CAACI,UAAL,CAAgBC,GAAhB,CAAoB,UAAUC,OAAV,EAAmB;AAC5C,aAAOA,OAAO,CAACC,IAAf;AACD,KAFM,CAAP;AAGD,GATM,CAAP;AAUD,CArBD;;AAuBA,eAAetB,iBAAf","sourcesContent":["/**\nCopyright 2016 Split Software\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n**/\nimport timeout from '../../utils/promise/timeout';\nimport tracker from '../../utils/timeTracker';\nimport { SplitError } from '../../utils/lang/Errors';\nimport mySegmentsService from '../../services/mySegments';\nimport mySegmentsRequest from '../../services/mySegments/get';\n\nvar mySegmentsFetcher = function mySegmentsFetcher(settings) {\n  var startingUp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var metricCollectors = arguments.length > 2 ? arguments[2] : undefined;\n  var mySegmentsPromise = mySegmentsService(mySegmentsRequest(settings));\n  mySegmentsPromise = tracker.start(tracker.TaskNames.MY_SEGMENTS_FETCH, startingUp ? metricCollectors : false, mySegmentsPromise); // Decorate with the timeout functionality if required\n\n  if (startingUp) {\n    mySegmentsPromise = timeout(settings.startup.requestTimeoutBeforeReady, mySegmentsPromise);\n  } // Extract segment names\n\n\n  return mySegmentsPromise // JSON parsing errors are handled as SplitErrors, to distinguish from user callback errors\n  .then(function (resp) {\n    return resp.json().catch(function (error) {\n      throw new SplitError(error.message);\n    });\n  }).then(function (json) {\n    return json.mySegments.map(function (segment) {\n      return segment.name;\n    });\n  });\n};\n\nexport default mySegmentsFetcher;"]},"metadata":{},"sourceType":"module"}